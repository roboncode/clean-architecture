(function(t,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(t=typeof globalThis<"u"?globalThis:t||self,i(t.business={}))})(this,function(t){"use strict";var f=Object.defineProperty;var w=(t,i,s)=>i in t?f(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s;var c=(t,i,s)=>(w(t,typeof i!="symbol"?i+"":i,s),s);class i{constructor(e,a,o){this.remoteDataSource=e,this.localDataSource=a,this.networkInfo=o}async getConcreteNumberTrivia(e){if(await this.networkInfo.isConnected()){const a=await this.remoteDataSource.getConcreteNumberTrivia(e);return this.localDataSource.cacheNumberTrivia(a),a}return this.localDataSource.getCachedNumberTrivia()}async getRandomNumberTrivia(){if(await this.networkInfo.isConnected()){const e=await this.remoteDataSource.getRandomNumberTrivia();return this.localDataSource.cacheNumberTrivia(e),e}return this.localDataSource.getCachedNumberTrivia()}}const s=r=>typeof r=="string"?Number(r):r,u=r=>async e=>(e=s(e),await r.getConcreteNumberTrivia(e)),m=r=>async()=>await r.getRandomNumberTrivia();class n{constructor(e,a,o,g="trivia"){this.number=e,this.text=a,this.found=o,this.type=g}serialize(){return JSON.stringify(this)}deserialize(e){return typeof e=="string"&&(e=JSON.parse(e)),Object.assign(this,e),this}validate(){return this.text.length>0&&this.number>0}}class h extends Error{}class l extends Error{}class b{constructor(e){this.storage=e}async getCachedNumberTrivia(){const e=await this.storage.getItem("cachedNumberTrivia");if(e)return new n(0,"",!1).deserialize(e);throw new l("No trivia cached")}async cacheNumberTrivia(e){await this.storage.setItem("cachedNumberTrivia",e.serialize())}}class d{constructor(e){this.httpClient=e}async getConcreteNumberTrivia(e){const a=await this.httpClient.get(`http://numbersapi.com/${e}?json`);return new n(0,"",!1).deserialize(await a.json())}async getRandomNumberTrivia(){const e=await this.httpClient.get("http://numbersapi.com/random?json");return new n(0,"",!1).deserialize(await e.json())}}class v{constructor(){c(this,"get",async e=>{try{return await fetch(e)}catch(a){throw new h(a.message)}})}}class T{constructor(){c(this,"data",{})}get length(){return Object.keys(this.data).length}clear(){this.data={}}getItem(e){return this.data[e]||null}key(e){return Object.keys(this.data)[e]||null}removeItem(e){delete this.data[e]}setItem(e,a){this.data[e]=a}}class N{async isConnected(){var e;return((e=globalThis.navigator)==null?void 0:e.onLine)||!1}}t.BrowserNetworkInfo=N,t.HttpClient=v,t.NumberTrivia=n,t.NumberTriviaLocalDataSource=b,t.NumberTriviaRemoteDataSource=d,t.NumberTriviaRepository=i,t.SessionStorage=T,t.makeGetConcreteNumberTrivia=u,t.makeGetRandomNumberTrivia=m,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
